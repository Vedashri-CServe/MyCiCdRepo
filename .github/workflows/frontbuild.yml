# This is a basic workflow to help you get started with Actions

name: CI build frontend

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "design_development" ]
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# Providing permission for git  
permissions:
  contents: write
# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build:
    #runs-on: windows-latest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
           fetch-depth: 0
      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: npm install, build, and test
        run: |
          npm install --legacy-peer-deps
          npm run build --if-present
      
      
      #- name: Upload artifact for deployment job
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: node-app
      #    path: .
      
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Fetch remote branches
        run: git fetch origin    
    #------------------------    
      # - name: Overwrite Files and Folders
      #   run: |
      #     cp -r check_sonar/ backup_branch/
      #     # Remove existing files and folders in the target branch
      #     git rm -r check_sonar/
      #     git commit -m "Remove existing files and folders" -a

      #     # Copy files and folders from source branch to target branch
      #     # cp -r source_folder/ target_folder/
     #----------------------------------------------     
      - name: Push code to check_sonar branch
        run: |
          git config --global user.name Vedashri-CServe
          git config --global user.email vedashri@cloudservesystems.com
          git clean -dfx .scannerwork\*
          git checkout check_sonar
          git add .
          git commit -m "Code for Sonar Check"
          git push -f origin check_sonar
        
      # - name: Create Pull Request
      #   uses: Vedashri-CServe/create-pull-request@v3
      #   with:
      #     token: ${{ secrets.CSERVE_TOKEN }} 
      #     branch: check_sonar    

