{"version":3,"file":"default-src_app_main_components_tooltips_tooltips_module_ts.js","mappings":"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","sources":["./src/app/main/components/tooltips/tooltips.component.ts","./src/app/main/components/tooltips/tooltips.component.html","./src/app/main/components/tooltips/tooltips.module.ts","./src/app/main/components/tooltips/tooltips.snippetcode.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as snippet from 'app/main/components/tooltips/tooltips.snippetcode';\n\n@Component({\n  selector: 'app-tooltips',\n  templateUrl: './tooltips.component.html'\n})\nexport class TooltipsComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  // snippet code variables\n  public _snippetCodeTooltipPositions = snippet.snippetCodeTooltipPositions;\n  public _snippetCodeTooltipTriggers = snippet.snippetCodeTooltipTriggers;\n  public _snippetCodeTooltipOptions = snippet.snippetCodeTooltipOptions;\n  public _snippetCodeTooltipMethods = snippet.snippetCodeTooltipMethods;\n  public _snippetCodeTooltipEvents = snippet.snippetCodeTooltipEvents;\n\n  @ViewChild('OpenEvent') OpenEvent;\n  @ViewChild('OpenEventAfter') OpenEventAfter;\n  @ViewChild('CloseEvent') CloseEvent;\n  @ViewChild('CloseEventAfter') CloseEventAfter;\n\n  constructor() {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  openEvent() {\n    alert('Open event!');\n    this.OpenEvent.open();\n  }\n\n  openEventAfter() {\n    setTimeout(() => {\n      alert('Opened After event!');\n    }, 300);\n    this.OpenEventAfter.open();\n  }\n\n  closeEvent() {\n    alert('Close event!');\n    this.CloseEvent.close();\n  }\n\n  closeEventAfter() {\n    setTimeout(() => {\n      alert('Closed After event!');\n    }, 300);\n    this.CloseEventAfter.close();\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'tooltips',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Components',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'tooltips',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!--Tooltip Positions Starts-->\n    <section id=\"tooltip-positions\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTooltipPositions\">\n            <h4 class=\"card-title\">Tooltip Positions</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Four options are available: top, right, bottom, and left aligned.</p>\n              <button\n                type=\"button\"\n                rippleEffect\n                class=\"btn btn-outline-primary mr-2\"\n                placement=\"top\"\n                ngbTooltip=\"Tooltip on top\"\n              >\n                Tooltip on top\n              </button>\n              <button\n                type=\"button\"\n                rippleEffect\n                class=\"btn btn-outline-primary mr-2\"\n                placement=\"right\"\n                ngbTooltip=\"Tooltip on right\"\n                container=\"body\"\n              >\n                Tooltip on right\n              </button>\n              <button\n                type=\"button\"\n                rippleEffect\n                class=\"btn btn-outline-primary mr-2\"\n                placement=\"bottom\"\n                ngbTooltip=\"Tooltip on bottom\"\n              >\n                Tooltip on bottom\n              </button>\n\n              <button\n                type=\"button\"\n                rippleEffect\n                class=\"btn btn-outline-primary\"\n                placement=\"left\"\n                ngbTooltip=\"Tooltip on left\"\n                container=\"body\"\n              >\n                Tooltip on left\n              </button>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Tooltip Positions Ends -->\n\n    <!-- Tooltip Triggers Starts-->\n    <section id=\"tooltip-triggers\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTooltipTriggers\">\n            <h4 class=\"card-title\">Tooltip Triggers</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">Tooltip is triggered using - click | hover | manual options.</p>\n              <div class=\"demo-inline-spacing\">\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  ngbTooltip=\"Click Triggered\"\n                  triggers=\"click:blur\"\n                >\n                  On Click Trigger\n                </button>\n                <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\" ngbTooltip=\"Hover Triggered\">\n                  On Hover Trigger\n                </button>\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary manual\"\n                  ngbTooltip=\"Manual Triggered\"\n                  [autoClose]=\"true\"\n                  triggers=\"manual\"\n                  #manualOpen=\"ngbTooltip\"\n                  (click)=\"manualOpen.open()\"\n                >\n                  On Manual Trigger\n                </button>\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  ngbTooltip=\"Manual Triggered\"\n                  #manualClose=\"ngbTooltip\"\n                  (click)=\"manualClose.close()\"\n                >\n                  Click me to close a tooltip\n                </button>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Tooltip Triggers Ends -->\n\n    <!-- Tooltip Options -->\n    <section id=\"tooltip-options\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTooltipOptions\">\n            <h4 class=\"card-title\">Tooltip Options</h4>\n            <div class=\"card-body\">\n              <div class=\"demo-inline-spacing\">\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  tooltipClass=\"text-uppercase fadeInAnimation\"\n                  ngbTooltip=\"Text in Uppercase\"\n                >\n                  Click to toggle\n                </button>\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary delay\"\n                  ngbTooltip=\"You see, I show up after 300ms and disappear after 500ms!\"\n                  [openDelay]=\"300\"\n                  [closeDelay]=\"500\"\n                >\n                  Hover 300ms here\n                </button>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Tooltip Options Ends -->\n\n    <!-- Tooltip Methods Starts-->\n    <section id=\"tooltip-methods\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTooltipMethods\">\n            <h4 class=\"card-title\">Tooltip Methods</h4>\n            <div class=\"card-body\">\n              <div class=\"demo-inline-spacing\">\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  ngbTooltip=\"Show Method Tooltip\"\n                  triggers=\"manual\"\n                  #methodOpen=\"ngbTooltip\"\n                  (click)=\"methodOpen.open()\"\n                >\n                  Show Method <span [data-feather]=\"'play-circle'\" class=\"'ml-1'\"></span>\n                </button>\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  #methodClose=\"ngbTooltip\"\n                  (click)=\"methodClose.close()\"\n                  ngbTooltip=\"Hide Method Tooltip\"\n                >\n                  Hide Method <span [data-feather]=\"'play-circle'\" class=\"'ml-1'\"></span>\n                </button>\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  triggers=\"manual\"\n                  #methodToggle=\"ngbTooltip\"\n                  (click)=\"methodToggle.toggle()\"\n                  ngbTooltip=\"Toggle Method Tooltip\"\n                >\n                  Toggle Method <span [data-feather]=\"'play-circle'\" class=\"'ml-1'\"></span>\n                </button>\n                <div class=\"btn-group\">\n                  <button\n                    type=\"button\"\n                    rippleEffect\n                    class=\"btn btn-outline-primary\"\n                    triggers=\"click\"\n                    #methodIsOpen=\"ngbTooltip\"\n                    (click)=\"methodIsOpen.isOpen()\"\n                    ngbTooltip=\"Dispose Method Tooltip\"\n                  >\n                    Toolip is : {{ methodIsOpen.isOpen() }}\n                  </button>\n                  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\">\n                    <span [data-feather]=\"'play-circle'\"></span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Tooltip Methods Ends -->\n\n    <!-- Tooltip Events starts -->\n    <section id=\"tooltip-events\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTooltipEvents\">\n            <h4 class=\"card-title\">Tooltip Events</h4>\n            <div class=\"card-body\">\n              <div class=\"demo-inline-spacing\">\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  ngbTooltip=\"Tooltip Open Event\"\n                  triggers=\"manual\"\n                  #OpenEvent=\"ngbTooltip\"\n                  (click)=\"openEvent()\"\n                >\n                  Open Event Tooltip\n                </button>\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  ngbTooltip=\"Tooltip Open Event\"\n                  triggers=\"manual\"\n                  #OpenEventAfter=\"ngbTooltip\"\n                  (click)=\"openEventAfter()\"\n                >\n                  Open Event Tooltip\n                </button>\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  ngbTooltip=\"Tooltip Show Event\"\n                  #CloseEvent=\"ngbTooltip\"\n                  (click)=\"closeEvent()\"\n                >\n                  Close Event Tooltip\n                </button>\n                <button\n                  type=\"button\"\n                  rippleEffect\n                  class=\"btn btn-outline-primary\"\n                  ngbTooltip=\"Tooltip Show Event\"\n                  #CloseEventAfter=\"ngbTooltip\"\n                  (click)=\"closeEventAfter()\"\n                >\n                  Closed Event Tooltip\n                </button>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Tooltip Events Ends -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { TooltipsComponent } from 'app/main/components/tooltips/tooltips.component';\n\nconst routes: Routes = [\n  {\n    path: 'tooltips',\n    component: TooltipsComponent,\n    data: { animation: 'tooltips' }\n  }\n];\n\n@NgModule({\n  declarations: [TooltipsComponent],\n  imports: [RouterModule.forChild(routes), NgbModule, CoreCommonModule, ContentHeaderModule, CardSnippetModule]\n})\nexport class TooltipsModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeTooltipPositions: snippetCode = {\n  html: `\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\"  placement=\"top\"\n    ngbTooltip=\"Tooltip on top\">\n    Tooltip on top\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\"  placement=\"right\" container=\"body\"\n    ngbTooltip=\"Tooltip on right\">\n    Tooltip on right\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\"  placement=\"bottom\"\n    ngbTooltip=\"Tooltip on bottom\">\n    Tooltip on bottom\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\"  placement=\"left\" container=\"body\"\n    ngbTooltip=\"Tooltip on left\">\n    Tooltip on left\n  </button>\n  `\n};\nexport const snippetCodeTooltipTriggers: snippetCode = {\n  html: `\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\"\n    ngbTooltip=\"Click Triggered\" triggers=\"click:blur\" >\n    On Click Trigger\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\"\n    ngbTooltip=\"Hover Triggered\" >\n    On Hover Trigger\n  </button>\n\n    ngbTooltip=\"Manual Triggered\" [autoClose]=\"true\" triggers=\"manual\" #manualOpen=\"ngbTooltip\" (click)=\"manualOpen.open()\" >\n    On Manual Trigger\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\" ngbTooltip=\"Manual Triggered\" #manualClose=\"ngbTooltip\" (click)=\"manualClose.close()\" >\n    Click me to close a tooltip\n  </button>\n  `\n};\nexport const snippetCodeTooltipOptions: snippetCode = {\n  html: `\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\" tooltipClass=\"text-uppercase fadeInAnimation\" ngbTooltip=\"Text in Uppercase\">\n    Click to toggle\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary delay\" ngbTooltip=\"You see, I show up after 300ms and disappear after 500ms!\" [openDelay]=\"300\" [closeDelay]=\"500\" >\n  Hover 300ms here\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary delay\" ngbTooltip=\"Disabled animation!\">\n  CLick to toggle\n  </button>\n  `\n};\nexport const snippetCodeTooltipMethods: snippetCode = {\n  html: `\n    <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\"\n      ngbTooltip=\"Show Method Tooltip\" triggers=\"manual\" #methodOpen=\"ngbTooltip\" (click)=\"methodOpen.open()\" >\n      Show Method <span [data-feather]=\"'play-circle'\" class=\"'ml-1'\"></span>\n    </button>\n\n    <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\" #methodClose=\"ngbTooltip\" (click)=\"methodClose.close()\"\n      ngbTooltip=\"Hide Method Tooltip\" >\n      Hide Method <span [data-feather]=\"'play-circle'\" class=\"'ml-1'\"></span>\n    </button>\n\n    <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\" triggers=\"manual\" #methodToggle=\"ngbTooltip\" (click)=\"methodToggle.toggle()\"\n      ngbTooltip=\"Toggle Method Tooltip\" >\n      Toggle Method <span [data-feather]=\"'play-circle'\" class=\"'ml-1'\"></span>\n    </button>\n\n    <div class=\"btn-group\">\n      <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\" triggers=\"click\" #methodIsOpen=\"ngbTooltip\" (click)=\"methodIsOpen.isOpen()\"\n        ngbTooltip=\"Dispose Method Tooltip\" >\n        Toolip is : {{ methodIsOpen.isOpen() }}\n      </button>\n      <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\">\n        <span [data-feather]=\"'play-circle'\"></span>\n      </button>\n    </div>\n  `\n};\nexport const snippetCodeTooltipEvents: snippetCode = {\n  html: `\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\" ngbTooltip=\"Tooltip Open Event\" triggers=\"manual\" #OpenEvent=\"ngbTooltip\" (click)=\"openEvent()\" >\n    Open Event Tooltip\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\" ngbTooltip=\"Tooltip Open Event\" triggers=\"manual\" #OpenEventAfter=\"ngbTooltip\" (click)=\"openEventAfter()\" >\n    Open Event Tooltip\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\" ngbTooltip=\"Tooltip Show Event\" #CloseEvent=\"ngbTooltip\" (click)=\"closeEvent()\" >\n    Close Event Tooltip\n  </button>\n\n  <button type=\"button\" rippleEffect class=\"btn btn-outline-primary\"  ngbTooltip=\"Tooltip Show Event\" #CloseEventAfter=\"ngbTooltip\" (click)=\"closeEventAfter()\" >\n    Closed Event Tooltip\n  </button>\n  `,\n  ts: `\n  @ViewChild('OpenEvent') OpenEvent;\n  @ViewChild('OpenEventAfter') OpenEventAfter;\n  @ViewChild('CloseEvent') CloseEvent;\n  @ViewChild('CloseEventAfter') CloseEventAfter;\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  openEvent() {\n    alert('Open event!');\n    this.OpenEvent.open();\n  }\n\n  openEventAfter() {\n    setTimeout(() => {\n      alert('Opened After event!');\n    }, 300);\n    this.OpenEventAfter.open();\n  }\n\n  closeEvent() {\n    alert('Close event!');\n    this.CloseEvent.close();\n  }\n\n  closeEventAfter() {\n    setTimeout(() => {\n      alert('Closed After event!');\n    }, 300);\n    this.CloseEventAfter.close();\n  }\n  `\n};\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}