"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUnits = exports.getSchedule = exports.arrayToString = exports.stringToArray = void 0;
const part_js_1 = require("./part.js");
const util_js_1 = require("./util.js");
const schedule_js_1 = require("./schedule.js");
const units_js_1 = require("./units.js");
const defaultOptions = {
    outputHashes: false,
    outputMonthNames: false,
    outputWeekdayNames: false,
};
/**
 * Parses a cron string
 *
 * @param str The string to parse
 * @return The cron schedule as an array
 */
function stringToArray(str) {
    if (typeof str !== "string") {
        throw new Error("Invalid cron string");
    }
    const parts = str.replace(/\s+/g, " ").trim().split(" ");
    if (parts.length !== 5) {
        throw new Error("Invalid cron string format");
    }
    else {
        return parts.map((str, idx) => (0, part_js_1.stringToArrayPart)(str, units_js_1.units[idx]));
    }
}
exports.stringToArray = stringToArray;
;
/**
 * Parses a 2-dimentional array of integers and serializes it to a string
 *
 * @param arr The array to parse
 * @return The cron schedule as a string
 */
function arrayToString(arr, options) {
    (0, util_js_1.assertValidArray)(arr);
    const parts = arr.map((part, idx) => (0, part_js_1.arrayToStringPart)(part, units_js_1.units[idx], Object.assign(Object.assign({}, defaultOptions), options)));
    return parts.join(" ");
}
exports.arrayToString = arrayToString;
/**
 * Returns the schedule iterator
 *
 * @param arr The cron schedule as an array
 * @param now An optional reference `Date`
 * @param timezone An optional timezone string
 * @return A schedule iterator
 */
function getSchedule(arr, now, timezone) {
    return new schedule_js_1.Schedule(arr, now, timezone);
}
exports.getSchedule = getSchedule;
/**
 * Returns a readonly array of cron units.
 * These specify the minimum and maximum values
 * for each part of a cron expression, as well as
 * the unit name and any alternative respresentations
 * for the values of that unit.
 *
 * @returns The `units` array
 */
function getUnits() {
    return units_js_1.units;
}
exports.getUnits = getUnits;
