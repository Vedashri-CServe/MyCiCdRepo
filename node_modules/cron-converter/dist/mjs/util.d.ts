/**
 * Parses a value as an integer or returns `undefined`
 * if the value could not be parsed a `number`
 *
 * @param value The integer `number` to parse
 * @returns The parsed integer or `undefined`
 */
export declare const parseNumber: (value: unknown) => number | undefined;
/**
 * Assert that a value is a valid cron array
 *
 * @param arr The array to check
 */
export declare const assertValidArray: (arr: unknown) => void;
/**
 * Creates an array of integers from start to end, inclusive
 *
 * @param start The first number in the range
 * @param end The last number in the range
 * @return The range, as an array of integers
 */
export declare const range: (start: number, end: number) => number[];
/**
 * Sorts an array of numbers
 *
 * @param array The array to sort
 * @return The sorted array
 */
export declare const sort: (array: number[]) => number[];
/**
 * Flattens a 2-dimensional array
 *
 * @param arrays A 2-dimensional array
 * @return The flattened array
 */
export declare const flatten: (arrays: number[][]) => number[];
/**
 * Removes duplicate entries from an array
 *
 * @param array An array
 * @return The de-duplicated array
 */
export declare const dedup: (array: number[]) => number[];
